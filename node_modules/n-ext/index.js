/**
 * Provides the loading of Ext Core
 * We do NOT load ext-core.js nor ext-core-debug.js nor ext-core-dev.js
 * because the modules included make use of navigator and window,
 * and we want the most minimalistic portion of Ext possible
 */
var nExtLoader = function() {
	//The cached library after the first bootstrap 
	var _ExtCache = null;
	
	var _defaultExtGetter;
	var _defaultExtSetter;
	
    /**
     * In which path are the Ext-core-srv sources located ?
     * @type string
     */
    var _prefix = './Ext-core-srv/';
    
    /**
     * Path where the libraries/namespaces are located by default ?
     * @type string
     */
    var _libPath = './lib/Ext/';
    
    /**
     * Path where the custom libraries/namespaces are located
     * @type string
     */
    var _customLibPaths = [];
    
    /**
     * Defines a debug/development environment
     */
    var _debug = false;
    
    /**
     * Loads the required files
     * @param sandbox Whether Ext should be defined application-wide or returned by the function to be used locally 
     */
    this.bootstrapCore = function() {
    	if (_ExtCache === null) {
	        require(_prefix + 'Ext.js');
	        require(_prefix + 'version/Version.js');
	        require(_prefix + 'lang/Array.js');
	        require(_prefix + 'lang/Date.js');
	        require(_prefix + 'lang/Function.js');
	        require(_prefix + 'lang/Number.js');
	        require(_prefix + 'lang/Object.js');
	        require(_prefix + 'lang/String.js');
	        require(_prefix + 'class/Base.js');
	        require(_prefix + 'class/Class.js');
	        require(_prefix + 'class/ClassManager.js');
	        require(_prefix + 'lang/Error.js');
	        require(_prefix + 'class/Loader.js');
	        //Ext.Loader may be used from here, but we still use Node.js require method to end loading the core
	        require(_prefix + 'util/Format.js');
	        require(_prefix + 'util/DelayedTask.js');
	        require(_prefix + 'util/Event.js');
	        // The latest require are not strictly mandatory, but really useful
	        require(_prefix + 'util/TaskManager.js');
	        require(_prefix + 'misc/JSON.js');
	        require(_prefix + 'Ext-more-srv.js');
	        
	        Ext.Loader.config.enabled = true;
	        Ext.Loader.setPath('Ext', _libPath);
	        require.paths.unshift(_libPath + '/../') //Defines the path where Ext is located as a default namespace location
	        global.__defineGetter__('window', function() {
	            return {};
	        });
	        Ext.require('Ext.ModelManager');
	        Ext.require('Ext.data.Store');
	        _ExtCache = Ext.apply({}, Ext);
    	} else {
	       	global.Ext = _ExtCache.apply({}, _ExtCache);
    	}
    };
    
    /**
     * Defines where the Ext lirary is located in the file structure
     */
    this.setExtPath = function(p) {
        _libPath = p;
    }
    
    /**
     * Enables the autoloading of any namespace located in the libPath
     */
    this.addLibPath = function(path) {
    	_customLibPaths.push(path);
        require.paths.unshift(path);
    }
    
    /**
     * Defines the debug/development environment
     */
    this.setDebug = function(value) {
        _debug = value;
    }
    
    /**
     * Unsets the wole Ext environment
     */
    this.unset = function() {
        _ExtCache.Array.remove(require.paths, _libPath);
        _ExtCache.Array.forEach(_customLibPaths, function(path) {
        	console.log(path);
        	_ExtCache.Array.remove(require.paths, path);
        });
        delete(global.Ext);
    }
};

module.exports = new nExtLoader();
